// Функция ПолучитьЗначениеРеквизита возвращает значение
// реквизита, прочитанного из информационной базы по ссылке на объект.
// 
//  Если доступа к реквизиту нет, возникнет исключение прав доступа.
//  Если необходимо зачитать реквизит независимо от прав текущего пользователя,
//  то следует использовать предварительный переход в привилегированный режим.
// 
// Параметры:
//  Ссылка       - ссылка на объект, - элемент справочника, документ, ...
//  ИмяРеквизита - Строка, например, "Код".
// 
// Возвращаемое значение:
//  Произвольный    - зависит от типа значения прочитанного реквизита.
// 
Функция ПолучитьЗначениеРеквизита(Ссылка, ИмяРеквизита) Экспорт
	
	Результат = ПолучитьЗначенияРеквизитов(Ссылка, ИмяРеквизита);
	Возврат Результат[ИмяРеквизита];
	
КонецФункции 

// Функция ПолучитьЗначенияРеквизитов возвращает структуру,
// содержащую значения реквизитов прочитанные из информационной базы
// по ссылке на объект.
// 
//  Если доступа к одному из реквизитов нет, возникнет исключение прав доступа.
//  Если необходимо зачитать реквизит независимо от прав текущего пользователя,
//  то следует использовать предварительный переход в привилегированный режим.
// 
// Параметры:
//  Ссылка       - ссылка на объект, - элемент справочника, документ, ...
//  ИменаРеквизитов - Строка, имена реквизитов перечисленные через запятую,
//               в формате требований к свойствам структуры.
//               Например, "Код, Наименование, Родитель".
// 
// Возвращаемое значение:
//  Структура    - содержит список свойств, как список имен в строке
//                 ИменаРеквизитов, со значениям реквизитов, прочитанных
//                 из информационной базы.
// 
Функция ПолучитьЗначенияРеквизитов(Ссылка, Знач ИменаРеквизитов) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	" + ИменаРеквизитов + "
		|ИЗ
		|	" + Ссылка.Метаданные().ПолноеИмя() + " КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Результат = Новый Структура(СтрЗаменить(ИменаРеквизитов, ".", ""));
	
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	Возврат Результат;
	
КонецФункции

Функция ПоместитьТаблицуВМенеджерВТ(Таблица, ИмяТаблицы, МенеджерВТ= Неопределено) Экспорт 
	
	Если МенеджерВТ = Неопределено Тогда 
		МенеджерВТ = новый МенеджерВременныхТаблиц;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ИмяТаблицы
	|ИЗ
	|	&Таблица КАК Таблица";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяТаблицы", ИмяТаблицы);
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции	

Функция ПоместитьТаблицыВМенеджерВТ(СтруктураТаблиц, МенеджерВТ= Неопределено) Экспорт
	
	Если МенеджерВТ = Неопределено Тогда 
		МенеджерВТ = новый МенеджерВременныхТаблиц;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	ШаблонЗапросаТаблицы = 
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ %1
	|ИЗ
	|	&%2 КАК Таблица";
	
	МассивПодзапросов = Новый Массив;
	
	
	Для Каждого ОписаниеТаблицы из СтруктураТаблиц Цикл 
		
		ИмяПараметра = "Таблица" + ОписаниеТаблицы.Ключ; 
		МассивПодзапросов.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЗапросаТаблицы, ОписаниеТаблицы.Ключ, ИмяПараметра));
		Запрос.УстановитьПараметр(ИмяПараметра, ОписаниеТаблицы.Значение);
		
	КонецЦикла;	
	
	Запрос.Текст = СтрСоединить(МассивПодзапросов, 
	"
	|;
	|");
	
	Запрос.Выполнить();
	Возврат Запрос.МенеджерВременныхТаблиц;

	
КонецФункции	

Процедура УдалитьТаблицыИзМенеджераВТ(ИменаТаблиц, МенеджерВТ) Экспорт 
	
	МассивИменТабиц = СтрРазделить(ИменаТаблиц,",");
	
	МассивБлоков = Новый Массив;	
	
	ШаблонБлока = "УНИЧТОЖИТЬ %1";
	РазделительБлоков = "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|";
	
	
	Для Каждого ИмяТаблицы из МассивИменТабиц Цикл 
		
		МассивБлоков.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонБлока,ИмяТаблицы));
		
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = СтрСоединить(МассивБлоков, РазделительБлоков);
	Запрос.Выполнить();
	
КонецПроцедуры	
