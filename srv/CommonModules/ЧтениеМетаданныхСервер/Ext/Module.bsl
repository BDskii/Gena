///////////////////////////////////////////////////////////////////////////////////////////////////
//Интерфейс

Процедура ОбработатьФайлыОбъектов(ДополнительныеДанные) Экспорт 
	
	НачатьТранзакцию();
	
	ОпределитьВерсию(ДополнительныеДанные);
	АктуализироватьСлужебныеЗаписиКорня(ДополнительныеДанные);
	ЗаписатьОбъектыКорня(ДополнительныеДанные);
	АктуализироватьСлужебныеЗаписиОбъектов(ДополнительныеДанные);
	ЗаписатьДочерниеОбъекты(ДополнительныеДанные);
	ЗаписатьДочерниеДочернихОбъектов(ДополнительныеДанные);
	
	ЗафиксироватьТранзакцию();
	
	
КонецПроцедуры	

функция ПрочитатьМодель() Экспорт 
	
	Возврат ПолучитьОбщийМакет("МодельДляЧтенияКонфигурации").ПолучитьТекст();
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////////////////////////
//Служебные

Процедура ОпределитьВерсию(ДополнительныеДанные)
	
	СуществующаяВерсия = Справочники.Версии.НайтиПоКоду(ДополнительныеДанные.НомерВерсии,,, ДополнительныеДанные.Конфигурация);
	
	Если ЗначениеЗаполнено(СуществующаяВерсия) Тогда 
		ДополнительныеДанные.Версия = СуществующаяВерсия;
		Возврат;
	КонецЕсли;	
	
	НоваяВерсия = Справочники.Версии.СоздатьЭлемент();
	НоваяВерсия.Владелец = ДополнительныеДанные.Конфигурация;
	НоваяВерсия.Код = ДополнительныеДанные.НомерВерсии;
	НоваяВерсия.Записать();
	ДополнительныеДанные.Версия = НоваяВерсия.Ссылка;

	
КонецПроцедуры	

Процедура АктуализироватьСлужебныеЗаписиКорня(ДополнительныеДанные)

	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Версия", ДополнительныеДанные.Версия);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОписаниеСтруктурыКонфигурации.Ссылка,
	|	ОписаниеСтруктурыКонфигурации.Родитель,
	|	ОписаниеСтруктурыКонфигурации.Наименование,
	|	ОписаниеСтруктурыКонфигурации.Имя
	|ПОМЕСТИТЬ КакДолжноБыть
	|ИЗ
	|	Справочник.ОписаниеСтруктурыКонфигурации КАК ОписаниеСтруктурыКонфигурации
	|ГДЕ
	|	ОписаниеСтруктурыКонфигурации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЭлементаСтруктуры.СлужебныеЭлементыКорня)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МетаданныеКонфигруации.Ссылка,
	|	МетаданныеКонфигруации.ЭлементСтруктуры,
	|	МетаданныеКонфигруации.Родитель,
	|	МетаданныеКонфигруации.Наименование,
	|	МетаданныеКонфигруации.Имя,
	|	МетаданныеКонфигруации.Родитель.ЭлементСтруктуры
	|ПОМЕСТИТЬ КакЕсть
	|ИЗ
	|	Справочник.МетаданныеКонфигруации КАК МетаданныеКонфигруации
	|ГДЕ
	|	МетаданныеКонфигруации.Владелец = &Версия
	|	И МетаданныеКонфигруации.ЭлементСтруктуры.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЭлементаСтруктуры.СлужебныеЭлементыКорня)";
	Запрос.Выполнить();
	
	УсловиеРавенства = 
	"КакЕсть.ЭлементСтруктуры = КакДолжноБыть.Ссылка";
	
	УсловиеОбновления = 
	"ЕстьNull(КакЕсть.РодительЭлементСтруктуры <> КакДолжноБыть.Родитель ,Ложь) 
	|ИЛИ КакЕсть.Наименование <> КакДолжноБыть.Наименование
	|ИЛИ КакЕсть.Имя <> КакДолжноБыть.Имя";
	
	ДопПоля = "
	|	КакДолжноБыть.Имя как КакДолжноБытьИмя,
	|	КакДолжноБыть.Наименование как КакДолжноБытьНаименование,
	|	КакДолжноБыть.Родитель как КакДолжноБытьРодитель";
	
	
	ОпределитьСписокДействий(Запрос.МенеджерВременныхТаблиц, УсловиеРавенства, УсловиеОбновления, ДопПоля);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНеобходимыхДействий.Действие КАК Действие,
	|	ЛОЖЬ КАК Обработано,
	|	ТаблицаНеобходимыхДействий.СсылкаКакЕсть КАК Ссылка,
	|	&Версия КАК Владелец,
	|	ТаблицаНеобходимыхДействий.СсылкаКакДолжноБыть КАК ЭлементСтруктуры,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьИмя КАК Имя,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьНаименование КАК Наименование,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьРодитель КАК ЭлементСтруктурыРодителя,
	|	НЕОПРЕДЕЛЕНО КАК Родитель
	|ИЗ
	|	ТаблицаНеобходимыхДействий КАК ТаблицаНеобходимыхДействий";
	
	ТаблицаДействий = Запрос.Выполнить().Выгрузить();
	Для Каждого ОбрабатываемаяСтрока из ТаблицаДействий Цикл 
		
		ОбработатьСтрокуДействий(ОбрабатываемаяСтрока, ТаблицаДействий);
		
	КонецЦикла;

	
КонецПроцедуры	

Процедура ЗаписатьОбъектыКорня(ДополнительныеДанные)
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИмяТипаИсходное",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150, ДопустимаяДлина.Переменная)));
	Таблица.Колонки.Добавить("Имя",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(256, ДопустимаяДлина.Переменная)));
	Таблица.Колонки.Добавить("Синоним", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150, ДопустимаяДлина.Переменная)));
	Таблица.Колонки.Добавить("ИД",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50, ДопустимаяДлина.Переменная)));
	
	ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(ДополнительныеДанные.ОбъектыКонфигурации ,Таблица);
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ОбщиеМеханизмыСервер.ПоместитьТаблицуВМенеджерВТ(Таблица, "ИсходнаяТаблица");
	Запрос.УстановитьПараметр("Версия", ДополнительныеДанные.Версия);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ИсходнаяТаблица.ИмяТипаИсходное + ИсходнаяТаблица.Имя + ИсходнаяТаблица.ИД КАК СТРОКА(500)) КАК Ссылка,
	|	ОписаниеСтруктурыКонфигурации.Ссылка КАК ЭлементСтруктуры,
	|	ОписаниеСтруктурыКонфигурации.Родитель как ЭлементСтруктурыРодитель,
	|	ИсходнаяТаблица.ИД,
	|	ИсходнаяТаблица.Имя,
	|	ИсходнаяТаблица.Синоним КАК Наименование
	|ПОМЕСТИТЬ КакДолжноБыть
	|ИЗ
	|	ИсходнаяТаблица КАК ИсходнаяТаблица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОписаниеСтруктурыКонфигурации КАК ОписаниеСтруктурыКонфигурации
	|		ПО ИсходнаяТаблица.ИмяТипаИсходное = ОписаниеСтруктурыКонфигурации.ПринимаемыйТип
	|			И (ОписаниеСтруктурыКонфигурации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЭлементаСтруктуры.ЗагружаемыйЭлементКорня))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МетаданныеКонфигруации.Ссылка,
	|	МетаданныеКонфигруации.ЭлементСтруктуры,
	|	МетаданныеКонфигруации.ИД,
	|	МетаданныеКонфигруации.Имя,
	|	МетаданныеКонфигруации.Наименование
	|ПОМЕСТИТЬ КакЕсть
	|ИЗ
	|	Справочник.МетаданныеКонфигруации КАК МетаданныеКонфигруации
	|ГДЕ
	|	МетаданныеКонфигруации.Владелец = &Версия
	|	И МетаданныеКонфигруации.ЭлементСтруктуры.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЭлементаСтруктуры.ЗагружаемыйЭлементКорня)";
	Запрос.Выполнить();
	
	УсловиеРавенства = 
	"КакЕсть.ЭлементСтруктуры = КакДолжноБыть.ЭлементСтруктуры и КакЕсть.ИД = КакДолжноБыть.ИД";
	
	УсловиеОбновления = 
	"(КакЕсть.Имя <> КакДолжноБыть.Имя
	|ИЛИ КакЕсть.Наименование <> КакДолжноБыть.Наименование)";
	
	ДопПоля = "
	|	КакДолжноБыть.ИД как КакДолжноБытьИД,
	|	КакДолжноБыть.Имя как КакДолжноБытьИмя,
	|	КакДолжноБыть.Наименование как КакДолжноБытьНаименование,
	|	КакДолжноБыть.ЭлементСтруктуры как КакДолжноБытьЭлементСтруктуры,
	|	КакДолжноБыть.ЭлементСтруктурыРодитель как КакДолжноБытьЭлементСтруктурыРодитель";
	
	ОпределитьСписокДействий(Запрос.МенеджерВременныхТаблиц, УсловиеРавенства, УсловиеОбновления, ДопПоля);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНеобходимыхДействий.Действие КАК Действие,
	|	ЛОЖЬ КАК Обработано,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьЭлементСтруктурыРодитель КАК ЭлементСтруктурыРодителя,
	|	ТаблицаНеобходимыхДействий.СсылкаКакЕсть КАК Ссылка,
	|	&Версия КАК Владелец,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьЭлементСтруктуры КАК ЭлементСтруктуры,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьИД КАК ИД,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьИмя КАК Имя,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьНаименование КАК Наименование,
	|	НЕОПРЕДЕЛЕНО КАК Родитель
	|ИЗ
	|	ТаблицаНеобходимыхДействий КАК ТаблицаНеобходимыхДействий
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ИСТИНА,
	|	NULL,
	|	МетаданныеКонфигруации.Ссылка,
	|	NULL,
	|	МетаданныеКонфигруации.ЭлементСтруктуры,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Справочник.МетаданныеКонфигруации КАК МетаданныеКонфигруации
	|ГДЕ
	|	МетаданныеКонфигруации.Владелец = &Версия";
		
	ТаблицаДействий = Запрос.Выполнить().Выгрузить();
	Для Каждого ОбрабатываемаяСтрока из ТаблицаДействий Цикл 
		
		ОбработатьСтрокуДействий(ОбрабатываемаяСтрока, ТаблицаДействий);
		
	КонецЦикла;
	
КонецПроцедуры	

Процедура АктуализироватьСлужебныеЗаписиОбъектов(ДополнительныеДанные)
	
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Версия", ДополнительныеДанные.Версия);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОписаниеСтруктурыКонфигурации.Ссылка КАК Ссылка,
	|	ОписаниеСтруктурыКонфигурации.Ссылка КАК ЭлементСтруктуры,
	|	МетаданныеКонфигруации.Ссылка КАК Родитель,
	|	ОписаниеСтруктурыКонфигурации.Наименование КАК Наименование,
	|	ОписаниеСтруктурыКонфигурации.Имя КАК Имя
	|ПОМЕСТИТЬ КакДолжноБыть
	|ИЗ
	|	Справочник.МетаданныеКонфигруации КАК МетаданныеКонфигруации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОписаниеСтруктурыКонфигурации КАК ОписаниеСтруктурыКонфигурации
	|		ПО МетаданныеКонфигруации.ЭлементСтруктуры = ОписаниеСтруктурыКонфигурации.Родитель
	|ГДЕ
	|	МетаданныеКонфигруации.Владелец = &Версия
	|	И ОписаниеСтруктурыКонфигурации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЭлементаСтруктуры.СлужебныеЭлементыОбъекта)
	|	И ОписаниеСтруктурыКонфигурации.Родитель.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЭлементаСтруктуры.ЗагружаемыйЭлементКорня)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МетаданныеКонфигруации.Ссылка КАК Ссылка,
	|	МетаданныеКонфигруации.ЭлементСтруктуры КАК ЭлементСтруктуры,
	|	МетаданныеКонфигруации.Родитель КАК Родитель,
	|	МетаданныеКонфигруации.Наименование КАК Наименование,
	|	МетаданныеКонфигруации.Имя КАК Имя
	|ПОМЕСТИТЬ КакЕсть
	|ИЗ
	|	Справочник.МетаданныеКонфигруации КАК МетаданныеКонфигруации
	|ГДЕ
	|	МетаданныеКонфигруации.Владелец = &Версия
	|	И МетаданныеКонфигруации.ЭлементСтруктуры.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЭлементаСтруктуры.СлужебныеЭлементыОбъекта)";
	Запрос.Выполнить();
	
	УсловиеРавенства = 
	"КакЕсть.Родитель = КакДолжноБыть.Родитель 
	|И КакЕсть.ЭлементСтруктуры = КакДолжноБыть.ЭлементСтруктуры";
	
	УсловиеОбновления = 
	"ЕСТЬNULL(КакЕсть.Родитель <> КакДолжноБыть.Родитель, ЛОЖЬ)
	|ИЛИ КакЕсть.Наименование <> КакДолжноБыть.Наименование
	|ИЛИ КакЕсть.Имя <> КакДолжноБыть.Имя";
	
	ДопПоля = "
	|	КакДолжноБыть.Имя как КакДолжноБытьИмя,
	|	КакДолжноБыть.Наименование как КакДолжноБытьНаименование,
	|	КакДолжноБыть.Родитель как КакДолжноБытьРодитель";
	
	ОпределитьСписокДействий(Запрос.МенеджерВременныхТаблиц, УсловиеРавенства, УсловиеОбновления, ДопПоля);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНеобходимыхДействий.Действие КАК Действие,
	|	ЛОЖЬ КАК Обработано,
	|	ТаблицаНеобходимыхДействий.СсылкаКакЕсть КАК Ссылка,
	|	&Версия КАК Владелец,
	|	ТаблицаНеобходимыхДействий.СсылкаКакДолжноБыть КАК ЭлементСтруктуры,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьИмя КАК Имя,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьНаименование КАК Наименование,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьРодитель КАК Родитель,
	|	Неопределено КАК ЭлементСтруктурыРодителя
	|ИЗ
	|	ТаблицаНеобходимыхДействий КАК ТаблицаНеобходимыхДействий";
	
	ТаблицаДействий = Запрос.Выполнить().Выгрузить();
	Для Каждого ОбрабатываемаяСтрока из ТаблицаДействий Цикл 
		
		ОбработатьСтрокуДействий(ОбрабатываемаяСтрока, ТаблицаДействий);
		
	КонецЦикла;

	
	
	
КонецПроцедуры	

Процедура ЗаписатьДочерниеОбъекты(ДополнительныеДанные)
	
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИмяТипа",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(256, ДопустимаяДлина.Переменная)));
	Таблица.Колонки.Добавить("ИДРодителя",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50, ДопустимаяДлина.Переменная)));
	Таблица.Колонки.Добавить("ИД",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50, ДопустимаяДлина.Переменная)));

	Таблица.Колонки.Добавить("Имя",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(256, ДопустимаяДлина.Переменная)));
	Таблица.Колонки.Добавить("Синоним", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150, ДопустимаяДлина.Переменная)));
	
	Для Каждого ОбъектКонфигурации Из ДополнительныеДанные.ОбъектыКонфигурации Цикл
		
		Для Каждого ДочернийОбъект из ОбъектКонфигурации.СтандартныеРеквизиты Цикл 
			
			НоваяСтрока  = Таблица.Добавить();
		    НоваяСтрока.ИмяТипа = "StandardAttribute";
			НоваяСтрока.ИДРодителя = ОбъектКонфигурации.ИД;
			НоваяСтрока.ИД = ДочернийОбъект.ИД;
			НоваяСтрока.Имя = ДочернийОбъект.Имя;
			НоваяСтрока.Синоним = ДочернийОбъект.Синоним;
			
		КонецЦикла;	
		
		Для Каждого ДочернийОбъект из ОбъектКонфигурации.Реквизиты Цикл 
			
			НоваяСтрока  = Таблица.Добавить();
		    НоваяСтрока.ИмяТипа = "Attribute";
			НоваяСтрока.ИДРодителя = ОбъектКонфигурации.ИД;
			НоваяСтрока.ИД = ДочернийОбъект.ИД;
			НоваяСтрока.Имя = ДочернийОбъект.Имя;
			НоваяСтрока.Синоним = ДочернийОбъект.Синоним;
			
		КонецЦикла;	

		Для Каждого ДочернийОбъект из ОбъектКонфигурации.ТабличныеЧасти Цикл 
			
			НоваяСтрока  = Таблица.Добавить();
		    НоваяСтрока.ИмяТипа = "TabularSection";
			НоваяСтрока.ИДРодителя = ОбъектКонфигурации.ИД;
			НоваяСтрока.ИД = ДочернийОбъект.ИД;
			НоваяСтрока.Имя = ДочернийОбъект.Имя;
			НоваяСтрока.Синоним = ДочернийОбъект.Синоним;
			
		КонецЦикла;	

		Для Каждого ДочернийОбъект из ОбъектКонфигурации.Команды Цикл 
			
			НоваяСтрока  = Таблица.Добавить();
		    НоваяСтрока.ИмяТипа = "Command";
			НоваяСтрока.ИДРодителя = ОбъектКонфигурации.ИД;
			НоваяСтрока.ИД = ДочернийОбъект.ИД;
			НоваяСтрока.Имя = ДочернийОбъект.Имя;
			НоваяСтрока.Синоним = ДочернийОбъект.Синоним;
			
		КонецЦикла;	

		
		
	КонецЦикла;

	
			
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Версия", ДополнительныеДанные.Версия);
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.ИмяТипа,
	|	Таблица.ИДРодителя,
	|	Таблица.ИД,
	|	Таблица.Имя,
	|	Таблица.Синоним
	|ПОМЕСТИТЬ ИсходнаяТаблица
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.ИмяТипа + ВложенныйЗапрос.ИДРодителя + ВложенныйЗапрос.ИД КАК СТРОКА(260)) КАК ИДЗаписи,
	|	ВложенныйЗапрос.ИмяТипа,
	|	ВложенныйЗапрос.ИДРодителя,
	|	ВложенныйЗапрос.ИД,
	|	ВложенныйЗапрос.Имя,
	|	ВложенныйЗапрос.Синоним,
	|	ВложенныйЗапрос.РодительскийОбъект,
	|	ВложенныйЗапрос.ЭлементСтруктурыРодительскогоОбъекта,
	|	ОписаниеСтруктурыКонфигурации.Ссылка КАК ЭлементСтруктуры,
	|	ОписаниеСтруктурыКонфигурации.Родитель КАК ЭлементСтруктурыНепосредственногоРодителя
	|ПОМЕСТИТЬ ЗагружаемыеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсходнаяТаблица.ИмяТипа КАК ИмяТипа,
	|		ИсходнаяТаблица.ИДРодителя КАК ИДРодителя,
	|		ИсходнаяТаблица.ИД КАК ИД,
	|		ИсходнаяТаблица.Имя КАК Имя,
	|		ИсходнаяТаблица.Синоним КАК Синоним,
	|		МетаданныеКонфигруации.Ссылка КАК РодительскийОбъект,
	|		МетаданныеКонфигруации.ЭлементСтруктуры КАК ЭлементСтруктурыРодительскогоОбъекта
	|	ИЗ
	|		ИсходнаяТаблица КАК ИсходнаяТаблица
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МетаданныеКонфигруации КАК МетаданныеКонфигруации
	|			ПО ИсходнаяТаблица.ИДРодителя = МетаданныеКонфигруации.ИД
	|				И (МетаданныеКонфигруации.Владелец = &Версия)
	|				И (МетаданныеКонфигруации.ЭлементСтруктуры.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЭлементаСтруктуры.ЗагружаемыйЭлементКорня))) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОписаниеСтруктурыКонфигурации КАК ОписаниеСтруктурыКонфигурации
	|		ПО ВложенныйЗапрос.ЭлементСтруктурыРодительскогоОбъекта = ОписаниеСтруктурыКонфигурации.Родитель.Родитель
	|			И ВложенныйЗапрос.ИмяТипа = ОписаниеСтруктурыКонфигурации.ПринимаемыйТип
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МетаданныеКонфигруации.Ссылка,
	|	МетаданныеКонфигруации.ЭлементСтруктуры КАК ЭлементСтруктуры,
	|	МетаданныеКонфигруации.Родитель.Родитель КАК РодительскийОбъект,
	|	МетаданныеКонфигруации.ИД,
	|	МетаданныеКонфигруации.Имя,
	|	МетаданныеКонфигруации.Наименование
	|ПОМЕСТИТЬ КакЕсть
	|ИЗ
	|	Справочник.МетаданныеКонфигруации КАК МетаданныеКонфигруации
	|ГДЕ
	|	МетаданныеКонфигруации.Владелец = &Версия
	|	И МетаданныеКонфигруации.ЭлементСтруктуры.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЭлементаСтруктуры.ЗагружаемыйЭлементОбъекта)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗагружаемыеДанные.ИДЗаписи КАК Ссылка,
	|	ЗагружаемыеДанные.ЭлементСтруктуры КАК ЭлементСтруктуры,
	|	ЗагружаемыеДанные.РодительскийОбъект КАК РодительскийОбъект,
	|	ЗагружаемыеДанные.ИД,
	|	ЗагружаемыеДанные.Имя,
	|	ЗагружаемыеДанные.Синоним КАК Наименование,
	|	ЗагружаемыеДанные.ЭлементСтруктурыНепосредственногоРодителя
	|ПОМЕСТИТЬ КакДолжноБыть
	|ИЗ
	|	ЗагружаемыеДанные КАК ЗагружаемыеДанные";
	Запрос.Выполнить();
	
	УсловиеРавенства = 
	"КакЕсть.РодительскийОбъект = КакДолжноБыть.РодительскийОбъект 
	|	И КакЕсть.ЭлементСтруктуры = КакДолжноБыть.ЭлементСтруктуры 
	|	И КакЕсть.ИД = КакДолжноБыть.ИД";
	
	УсловиеОбновления = 
	"(КакЕсть.Имя <> КакДолжноБыть.Имя
	|	ИЛИ КакЕсть.Наименование <> КакДолжноБыть.Наименование)";
	
	ДопПоля = "
	|	КакДолжноБыть.Имя как КакДолжноБытьИмя,
	|	КакДолжноБыть.Наименование как КакДолжноБытьНаименование,
	|	КакДолжноБыть.ИД как КакДолжноБытьИД,
	|	КакДолжноБыть.ЭлементСтруктуры как КакДолжноБытьЭлементСтруктуры,
	|	КакДолжноБыть.РодительскийОбъект как КакДолжноБытьРодительскийОбъект,
	|	КакДолжноБыть.ЭлементСтруктурыНепосредственногоРодителя как КакДолжноБытьЭлементСтруктурыНепосредственногоРодителя";
	
	ОпределитьСписокДействий(Запрос.МенеджерВременныхТаблиц, УсловиеРавенства, УсловиеОбновления, ДопПоля);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНеобходимыхДействий.Действие КАК Действие,
	|	ЛОЖЬ КАК Обработано,
	|	НЕОПРЕДЕЛЕНО КАК ЭлементСтруктурыРодителя,
	|	ТаблицаНеобходимыхДействий.СсылкаКакЕсть КАК Ссылка,
	|	&Версия КАК Владелец,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьЭлементСтруктуры КАК ЭлементСтруктуры,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьИД,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьИмя,
	|	ТаблицаНеобходимыхДействий.КакДолжноБытьНаименование КАК Наименование,
	|	МетаданныеКонфигруации.Ссылка КАК Родитель
	|ИЗ
	|	ТаблицаНеобходимыхДействий КАК ТаблицаНеобходимыхДействий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МетаданныеКонфигруации КАК МетаданныеКонфигруации
	|		ПО ТаблицаНеобходимыхДействий.КакДолжноБытьЭлементСтруктурыНепосредственногоРодителя = МетаданныеКонфигруации.ЭлементСтруктуры
	|			И (МетаданныеКонфигруации.Владелец = &Версия)
	|			И ТаблицаНеобходимыхДействий.КакДолжноБытьРодительскийОбъект = МетаданныеКонфигруации.Родитель";
		
	ТаблицаДействий = Запрос.Выполнить().Выгрузить();
	Для Каждого ОбрабатываемаяСтрока из ТаблицаДействий Цикл 
		
		ОбработатьСтрокуДействий(ОбрабатываемаяСтрока, ТаблицаДействий);
		
	КонецЦикла;
	
КонецПроцедуры	

Процедура ЗаписатьДочерниеДочернихОбъектов(ДополнительныеДанные)
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ИмяТипа",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(256, ДопустимаяДлина.Переменная)));
	Таблица.Колонки.Добавить("ИДОбъекта",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50, ДопустимаяДлина.Переменная)));
	Таблица.Колонки.Добавить("ИДРодителя",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50, ДопустимаяДлина.Переменная)));
	Таблица.Колонки.Добавить("ИД",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50, ДопустимаяДлина.Переменная)));

	Таблица.Колонки.Добавить("Имя",Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(256, ДопустимаяДлина.Переменная)));
	Таблица.Колонки.Добавить("Синоним", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(150, ДопустимаяДлина.Переменная)));
	
	Для Каждого ОбъектКонфигурации Из ДополнительныеДанные.ОбъектыКонфигурации Цикл
		Для Каждого ДочернийОбъект из ОбъектКонфигурации.ТабличныеЧасти Цикл 
			Для Каждого РеквизитТЧ из ДочернийОбъект.ДочерниеЭлементы Цикл  
				НоваяСтрока  = Таблица.Добавить();
				НоваяСтрока.ИмяТипа = "TabularSectionAttribute";
				НоваяСтрока.ИДОбъекта = ОбъектКонфигурации.ИД;
				НоваяСтрока.ИДРодителя = ДочернийОбъект.ИД;
				НоваяСтрока.ИД = РеквизитТЧ.ИД;
				НоваяСтрока.Имя = РеквизитТЧ.Имя;
				НоваяСтрока.Синоним = РеквизитТЧ.Синоним;
			КонецЦикла;
		КонецЦикла;	
	КонецЦикла;	
	
			
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Версия", ДополнительныеДанные.Версия);
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таблица.ИмяТипа,
	|	Таблица.ИДОбъекта,
	|	Таблица.ИДРодителя,
	|	Таблица.ИД,
	|	Таблица.Имя,
	|	Таблица.Синоним
	|ПОМЕСТИТЬ ИсходнаяТаблица
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.ИмяТипа + ВложенныйЗапрос.ИДРодителя + ВложенныйЗапрос.ИД КАК СТРОКА(260)) КАК ИДЗаписи,
	|	ВложенныйЗапрос.ИмяТипа,
	|	ВложенныйЗапрос.ИДОбъекта,
	|	ВложенныйЗапрос.ИДРодителя,
	|	ВложенныйЗапрос.ИД,
	|	ВложенныйЗапрос.Имя,
	|	ВложенныйЗапрос.Синоним,
	|	ВложенныйЗапрос.РодительскийОбъект,
	|	ВложенныйЗапрос.ЭлементСтруктурыРодительскогоОбъекта,
	|	ОписаниеСтруктурыКонфигурации.Ссылка КАК ЭлементСтруктуры,
	|	ОписаниеСтруктурыКонфигурации.Родитель КАК ЭлементСтруктурыНепосредственногоРодителя
	|ПОМЕСТИТЬ ЗагружаемыеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсходнаяТаблица.ИмяТипа КАК ИмяТипа,
	|		ИсходнаяТаблица.ИДОбъекта КАК ИДОбъекта,
	|		ИсходнаяТаблица.ИДРодителя КАК ИДРодителя,
	|		ИсходнаяТаблица.ИД КАК ИД,
	|		ИсходнаяТаблица.Имя КАК Имя,
	|		ИсходнаяТаблица.Синоним КАК Синоним,
	|		МетаданныеКонфигруации.Ссылка КАК РодительскийОбъект,
	|		МетаданныеКонфигруации.ЭлементСтруктуры КАК ЭлементСтруктурыРодительскогоОбъекта
	|	ИЗ
	|		ИсходнаяТаблица КАК ИсходнаяТаблица
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МетаданныеКонфигруации КАК МетаданныеКонфигруации
	|			ПО ИсходнаяТаблица.ИДРодителя = МетаданныеКонфигруации.ИД
	|				И (МетаданныеКонфигруации.Владелец = &Версия)
	|				И (МетаданныеКонфигруации.ЭлементСтруктуры.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЭлементаСтруктуры.ЗагружаемыйЭлементКорня))) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОписаниеСтруктурыКонфигурации КАК ОписаниеСтруктурыКонфигурации
	|		ПО ВложенныйЗапрос.ЭлементСтруктурыРодительскогоОбъекта = ОписаниеСтруктурыКонфигурации.Родитель.Родитель
	|			И ВложенныйЗапрос.ИмяТипа = ОписаниеСтруктурыКонфигурации.ПринимаемыйТип
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МетаданныеКонфигруации.Ссылка,
	|	МетаданныеКонфигруации.ЭлементСтруктуры КАК ЭлементСтруктуры,
	|	МетаданныеКонфигруации.Родитель.Родитель КАК РодительскийОбъект,
	|	МетаданныеКонфигруации.ИД
	|ПОМЕСТИТЬ КакЕсть
	|ИЗ
	|	Справочник.МетаданныеКонфигруации КАК МетаданныеКонфигруации
	|ГДЕ
	|	МетаданныеКонфигруации.Владелец = &Версия
	|	И МетаданныеКонфигруации.ЭлементСтруктуры.Тип = ЗНАЧЕНИЕ(Перечисление.ТипЭлементаСтруктуры.ЗагружаемыйЭлементОбъекта)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗагружаемыеДанные.ИДЗаписи КАК Ссылка,
	|	ЗагружаемыеДанные.ЭлементСтруктуры КАК ЭлементСтруктуры,
	|	ЗагружаемыеДанные.РодительскийОбъект КАК РодительскийОбъект,
	|	ЗагружаемыеДанные.ИД
	|ПОМЕСТИТЬ КакДолжноБыть
	|ИЗ
	|	ЗагружаемыеДанные КАК ЗагружаемыеДанные";
	Запрос.Выполнить();

	
	
	
	
	

	
КонецПроцедуры	



Функция ОпределитьСписокДействий(МенеджерВТ, УсловиеРавенства, УсловиеОбновления = "", ДопПоля = "") Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	""Обновить"" КАК Действие,
	|	КакЕсть.Ссылка КАК СсылкаКакЕсть,
	|	КакДолжноБыть.Ссылка КАК СсылкаКакДолжноБыть 
	|	,&ДопПоля
	|ПОМЕСТИТЬ ТаблицаНеобходимыхДействий
	|ИЗ
	|	КакЕсть КАК КакЕсть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КакДолжноБыть КАК КакДолжноБыть
	|		ПО (&УсловиеРавенства)
	|ГДЕ
	|	ИСТИНА
	|	И &УсловиеОбновления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Удалить"",
	|	КакЕсть.Ссылка,
	|	НЕОПРЕДЕЛЕНО 
	|	,&ДопПоля
	|ИЗ
	|	КакЕсть КАК КакЕсть
	|		ЛЕВОЕ СОЕДИНЕНИЕ КакДолжноБыть КАК КакДолжноБыть
	|		ПО (&УсловиеРавенства)
	|ГДЕ
	|	КакДолжноБыть.Ссылка ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Добавить"",
	|	НЕОПРЕДЕЛЕНО,
	|	КакДолжноБыть.Ссылка 
	|	,&ДопПоля
	|ИЗ
	|	КакДолжноБыть КАК КакДолжноБыть
	|		ЛЕВОЕ СОЕДИНЕНИЕ КакЕсть КАК КакЕсть
	|		ПО (&УсловиеРавенства)
	|ГДЕ
	|	КакЕсть.Ссылка ЕСТЬ NULL ";
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"&УсловиеРавенства",УсловиеРавенства);
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &УсловиеОбновления",?(ЗначениеЗаполнено(УсловиеОбновления),"И "+УсловиеОбновления,""));
	Запрос.Текст = СтрЗаменить(Запрос.Текст,",&ДопПоля",?(ЗначениеЗаполнено(ДопПоля),", "+ДопПоля,""));
    
	Запрос.Выполнить();
	
	Возврат МенеджерВТ;
	
КонецФункции	

Процедура ОбработатьСтрокуДействий(ОбрабатываемаяСтрока, ТаблицаДействий)
	
	Если ОбрабатываемаяСтрока.Обработано Тогда 
		Возврат ;
	КонецЕсли;	
	
	Если ОбрабатываемаяСтрока.Действие = "Обновить" Тогда
		
		РедактируемыйОбъект = ОбрабатываемаяСтрока.Ссылка.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(РедактируемыйОбъект, ОбрабатываемаяСтрока);
		РедактируемыйОбъект.Родитель = ОпределитьРодителя(ОбрабатываемаяСтрока, ТаблицаДействий);
		РедактируемыйОбъект.Записать();
		
	ИначеЕсли ОбрабатываемаяСтрока.Действие = "Удалить" Тогда 
		
		РедактируемыйОбъект = ОбрабатываемаяСтрока.Ссылка.ПолучитьОбъект();
		РедактируемыйОбъект.УстановитьПометкуУдаления(Истина, Истина);
		
	ИначеЕсли ОбрабатываемаяСтрока.Действие = "Добавить" Тогда
		
		РедактируемыйОбъект = Справочники.МетаданныеКонфигруации.СоздатьЭлемент();
		ЗаполнитьЗначенияСвойств(РедактируемыйОбъект, ОбрабатываемаяСтрока);
		РедактируемыйОбъект.Родитель = ОпределитьРодителя(ОбрабатываемаяСтрока, ТаблицаДействий);

		
		РедактируемыйОбъект.Записать();
		ОбрабатываемаяСтрока.Ссылка = РедактируемыйОбъект.Ссылка;
		
	КонецЕсли;	
	
	ОбрабатываемаяСтрока.Обработано = Истина;
	
КонецПроцедуры	

функция ОпределитьРодителя(ОбрабатываемаяСтрока, ТаблицаДействий)
	
	Если ЗначениеЗаполнено(ОбрабатываемаяСтрока.Родитель) Тогда 
		Возврат ОбрабатываемаяСтрока.Родитель;
	КонецЕсли;	
	
	Родитель = Неопределено;
	
	Если ЗначениеЗаполнено(ОбрабатываемаяСтрока.ЭлементСтруктурыРодителя) Тогда 
		СтрокиРодителя = ТаблицаДействий.НайтиСтроки(Новый Структура("ЭлементСтруктуры",ОбрабатываемаяСтрока.ЭлементСтруктурыРодителя));
		Для Каждого СтрокаРодителя из СтрокиРодителя Цикл 
			ОбработатьСтрокуДействий(СтрокаРодителя, ТаблицаДействий);
			Родитель = СтрокаРодителя.Ссылка;
		КонецЦикла; 
	КонецЕсли;
	
	Возврат Родитель;
	
КонецФункции	







//функция ПолучитьТаблицуСлужебныхЗаписейКорня(Владелец)
	
	//ТаблицаЗаписей =  ПолучитьТаблицуДляЗагрузки();
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Общие";
	//НоваяСтрока.Синоним = "Общие";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ПривычнаяСортировка = 1;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Константы";
	//НоваяСтрока.Синоним = "Константы";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Константы");
	//НоваяСтрока.ПривычнаяСортировка = 2;

	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Справочники";
	//НоваяСтрока.Синоним = "Справочники";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Справочники");
	//НоваяСтрока.ПривычнаяСортировка = 3;

	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Документы";
	//НоваяСтрока.Синоним = "Документы";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Документы");
	//НоваяСтрока.ПривычнаяСортировка = 4;

	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Нумераторы";
	//НоваяСтрока.Синоним = "Нумераторы";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Документы";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Нумераторы");
	//НоваяСтрока.ПривычнаяСортировка = 1;

	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Последовательности";
	//НоваяСтрока.Синоним = "Последовательности";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Документы";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Последовательности");
	//НоваяСтрока.ПривычнаяСортировка = 2;

	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ЖурналыДокументов";
	//НоваяСтрока.Синоним = "Журналы документов";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.ЖурналыДокументов");
	//НоваяСтрока.ПривычнаяСортировка = 5;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Перечисления";
	//НоваяСтрока.Синоним = "Перечисления";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Перечисления");
	//НоваяСтрока.ПривычнаяСортировка = 6;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Отчеты";
	//НоваяСтрока.Синоним = "Отчеты";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Отчеты");
	//НоваяСтрока.ПривычнаяСортировка = 7;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Обработки";
	//НоваяСтрока.Синоним = "Обработки";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Обработки");
	//НоваяСтрока.ПривычнаяСортировка = 8;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "РегистрыСведений";
	//НоваяСтрока.Синоним = "Регистры сведений";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.РегистрыСведений");
	//НоваяСтрока.ПривычнаяСортировка = 9;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "РегистрыНакопления";
	//НоваяСтрока.Синоним = "Регистры накопления";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.РегистрыНакопления");
	//НоваяСтрока.ПривычнаяСортировка = 10;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ПланыВидовХарактеристик";
	//НоваяСтрока.Синоним = "Планы видов характеристик";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.ПланыВидовХарактеристик");
	//НоваяСтрока.ПривычнаяСортировка = 11;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ПланыСчетов";
	//НоваяСтрока.Синоним = "Планы счетов";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.ПланыСчетов");
	//НоваяСтрока.ПривычнаяСортировка = 12;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "РегистрыБухгалтерии";
	//НоваяСтрока.Синоним = "Регистры бухгалтерии";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.РегистрыБухгалтерии");
	//НоваяСтрока.ПривычнаяСортировка = 13;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ПланыВидовРасчета";
	//НоваяСтрока.Синоним = "Планы видов расчета";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.ПланыВидовРасчета");
	//НоваяСтрока.ПривычнаяСортировка = 14;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "РегистрыРасчета";
	//НоваяСтрока.Синоним = "Регистры расчета";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.РегистрыРасчета");
	//НоваяСтрока.ПривычнаяСортировка = 15;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "БизнесПроцессы";
	//НоваяСтрока.Синоним = "Бизнес процессы";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.БизнесПроцессы");
	//НоваяСтрока.ПривычнаяСортировка = 16;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Задачи";
	//НоваяСтрока.Синоним = "Задачи";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Задачи");
	//НоваяСтрока.ПривычнаяСортировка = 17;
	//
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ВнешниеИсточникиДанных";
	//НоваяСтрока.Синоним = "Внешние источники данных";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.ВнешниеИсточникиДанных");
	//НоваяСтрока.ПривычнаяСортировка = 18;
	//
	//
	//
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Языки";
	//НоваяСтрока.Синоним = "Языки";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_Языки");
	//
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Подсистемы";
	//НоваяСтрока.Синоним = "Подсистемы";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_Подсистемы");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ЭлементыСтиля";
	//НоваяСтрока.Синоним = "Элементы стиля";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ЭлементыСтиля");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Стили";
	//НоваяСтрока.Синоним = "Стили";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_Стили");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ОбщиеКартинки";
	//НоваяСтрока.Синоним = "Общие картинки";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ОбщиеКартинки");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Интерфейсы";
	//НоваяСтрока.Синоним = "Интерфейсы";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_Интерфейсы");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ПараметрыСеанса";
	//НоваяСтрока.Синоним = "Параметры сеанса";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ПараметрыСеанса");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "Роли";
	//НоваяСтрока.Синоним = "Роли";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_Роли");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ОбщиеМакеты";
	//НоваяСтрока.Синоним = "Общие макеты";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ОбщиеМакеты");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "КритерииОтбора";
	//НоваяСтрока.Синоним = "Критерии отбора";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_КритерииОтбора");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ОбщиеМодули";
	//НоваяСтрока.Синоним = "Общие модули";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ОбщиеМодули");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ОбщиеРеквизиты";
	//НоваяСтрока.Синоним = "Общие реквизиты";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ОбщиеРеквизиты");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ПланыОбмена";
	//НоваяСтрока.Синоним = "Планы обмена";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ПланыОбмена");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "XDTOПакеты";
	//НоваяСтрока.Синоним = "XDTO пакеты";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_XDTOПакеты");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "WebСервисы";
	//НоваяСтрока.Синоним = "Web сервисы";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_WebСервисы");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "HTTPСервисы";
	//НоваяСтрока.Синоним = "HTTP сервисы";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_HTTPСервисы");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "WSСсылки";
	//НоваяСтрока.Синоним = "WS ссылки";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_WSСсылки");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ПодпискиНаСобытия";
	//НоваяСтрока.Синоним = "Подписки на события";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ПодпискиНаСобытия");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "РегламентныеЗадания";
	//НоваяСтрока.Синоним = "Регламентные задания";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_РегламентныеЗадания");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ХранилищаНастроек";
	//НоваяСтрока.Синоним = "Хранилища настроек";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ХранилищаНастроек");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ФункциональныеОпции";
	//НоваяСтрока.Синоним = "Функциональные опции";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ФункциональныеОпции");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ПараметрыФункциональныхОпций";
	//НоваяСтрока.Синоним = "Параметры функциональных опций";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ПараметрыФункциональныхОпций");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ОпределяемыеТипы";
	//НоваяСтрока.Синоним = "Определяемые типы";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ОпределяемыеТипы");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ОбщиеКоманды";
	//НоваяСтрока.Синоним = "Общие команды";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ОбщиеКоманды");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ГруппыКоманд";
	//НоваяСтрока.Синоним = "Группы команд";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ГруппыКоманд");
	//	
	//НоваяСтрока = ТаблицаЗаписей.Добавить();
	//НоваяСтрока.Владелец = Владелец;
	//НоваяСтрока.Наименование = "ОбщиеФормы";
	//НоваяСтрока.Синоним = "Общие формы";
	//НоваяСтрока.Тип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Служебные");
	//НоваяСтрока.ИмяРодителя = "Общие";
	//НоваяСтрока.ПринимаемыйТип = ПредопределенноеЗначение("Перечисление.ТипыМетаданных.Общие_ОбщиеФормы");
	//
	//Возврат ТаблицаЗаписей;
//КонецФункции	
